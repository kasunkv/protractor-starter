<<<<<<< HEAD
# Protractor-TypeScript Automation Starter

Protractor-TypeScrip Automation Starter is a project combining freatures of Protractor and TypeScript to make a fully featured starting up point for Protractor end-to-end testing for AngularJS applications. End-to-end tests are brittle and using plain JavaScript makes it even harder to make it more resilient. Strong typing, compile time error checking, great intellisense in certain IDEs (and some IDEs with extensions) make your code more resilient for JavaScript related issues. On top of that, Protractor-TypeScrip Automation Starter provides builtin helper libraries, plugins integrated directly in to the Starter project, Dashboards that display test results in real-time makes it easy to get up and running with Protractor End-to-End testing with less amount of ceremony. 
=======
# protractor-starter [![Codacy Badge](https://api.codacy.com/project/badge/Grade/f44bb3f03787447d9ba45a763d747764)](https://www.codacy.com/app/charithsoori/protractor-starter?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=99xt/protractor-starter&amp;utm_campaign=Badge_Grade)
Protractor end to end testing boilerplate

##Description

 Protractor starting kit for writing end-to-end tests for angular.js applications. 
 Using TypeScript for strong typing and rich code completion suppor mixed with useful plugins built-in
 to the starterkit to help you get started writing protractor tests in no time.

##Install 

- <code>npm</code> and <code>Node.js</code> 4.6.1 are prerequisites to have 
- you can check your versions for both by running the following code in your terminal
    - <code> $ npm -v </code>
    - <code> $ node -v </code>
- <code>npm install</code> to load the packages 
- <code>typings install </code> for <code>TypeScript</code>
- You also need <code>es6-promise</code>
    -if this does not load with <code> $ npm install</code> ; 
    -Run in your terminal:
        - <code> $ npm install es6-promise --save</code>


##Development server
need more input 

##Running unit tests
Pretest
- <code> npm run compile </code> 
Test
- <code>npm test </code> 
>>>>>>> master
